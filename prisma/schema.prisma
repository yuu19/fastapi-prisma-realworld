generator client {
  provider             = "prisma-client-py"
  interface            = "asyncio"
  recursive_type_depth = 5
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}


model Article {
  id          Int       @id @default(autoincrement())
  slug        String    @unique
  title       String
  description String
  body        String
  created_at   DateTime  @default(now())
  updated_at   DateTime  @default(now())
  tag_list     Tag[]
  author      User      @relation("UserArticles", fields: [author_id], onDelete: Cascade, references: [id])
  author_id    Int
  favorited_by User[]    @relation("UserFavorites")
  comments    Comment[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  body      String
  article   Article  @relation(fields: [article_id], references: [id], onDelete: Cascade)
  article_id Int
  author    User     @relation(fields: [author_id], references: [id], onDelete: Cascade)
  author_id  Int
}

model Tag {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  articles Article[]
}

model User {
  id         Int       @id @default(autoincrement())
  email      String    @unique
  username   String    @unique
  password   String
  image      String?   @default("https://api.realworld.io/images/smiley-cyrus.jpeg")
  bio        String?
  articles   Article[] @relation("UserArticles")
  favorites  Article[] @relation("UserFavorites")
  followed_by User[]    @relation("UserFollows")
  following  User[]    @relation("UserFollows")
  comments   Comment[]
  demo       Boolean   @default(false)
}